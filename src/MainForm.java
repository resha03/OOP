/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;


/**
 *
 * @author Shen Ashley Defensor
 */
public class MainForm extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        ftPhone = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        ftCi = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        ftCo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableVisitors = new javax.swing.JTable();
        Create = new javax.swing.JButton();
        Search = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        ftNoV = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        ftPoV = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        ftVID = new javax.swing.JTextField();
        Update = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        Delete = new javax.swing.JButton();
        CLEAR = new javax.swing.JButton();
        ftEmail = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        ftAddress = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        ftPhone.setBackground(new java.awt.Color(204, 255, 255));
        ftPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ftPhoneActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        jLabel5.setText("Check-In:");

        ftCi.setBackground(new java.awt.Color(204, 255, 255));

        jLabel6.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        jLabel6.setText("Check-Out:");

        ftCo.setBackground(new java.awt.Color(204, 255, 255));

        TableVisitors.setBackground(new java.awt.Color(51, 204, 255));
        TableVisitors.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        TableVisitors.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Visitor's_ID", "Name of Visitor", "Purpose of Visit", "Phone", "Email", "Address", "Check_In", "Check_Out"
            }
        ));
        jScrollPane1.setViewportView(TableVisitors);

        Create.setBackground(new java.awt.Color(153, 255, 255));
        Create.setFont(new java.awt.Font("Calisto MT", 1, 14)); // NOI18N
        Create.setText("Create");
        Create.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Create.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateActionPerformed(evt);
            }
        });

        Search.setBackground(new java.awt.Color(153, 255, 255));
        Search.setFont(new java.awt.Font("Calisto MT", 1, 14)); // NOI18N
        Search.setText("Search");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });

        jLabel8.setBackground(new java.awt.Color(0, 255, 204));
        jLabel8.setFont(new java.awt.Font("Sitka Text", 1, 36)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 255, 255));
        jLabel8.setText("Hello&Welcome");

        jLabel1.setFont(new java.awt.Font("Calisto MT", 1, 14)); // NOI18N
        jLabel1.setText("Name of Visitor:");

        ftNoV.setBackground(new java.awt.Color(204, 255, 255));
        ftNoV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ftNoVActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Calisto MT", 1, 14)); // NOI18N
        jLabel2.setText("Purpose of Visitor:");

        ftPoV.setBackground(new java.awt.Color(204, 255, 255));
        ftPoV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ftPoVActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Calisto MT", 1, 14)); // NOI18N
        jLabel3.setText("Visitor's_ID:");

        ftVID.setBackground(new java.awt.Color(204, 255, 255));
        ftVID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ftVIDActionPerformed(evt);
            }
        });

        Update.setBackground(new java.awt.Color(153, 255, 255));
        Update.setFont(new java.awt.Font("Calisto MT", 1, 14)); // NOI18N
        Update.setText("Update");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Calisto MT", 1, 14)); // NOI18N
        jLabel4.setText("Phone:");

        Delete.setBackground(new java.awt.Color(153, 255, 255));
        Delete.setFont(new java.awt.Font("Calisto MT", 1, 14)); // NOI18N
        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        CLEAR.setBackground(new java.awt.Color(204, 255, 255));
        CLEAR.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        CLEAR.setText("CLEAR");
        CLEAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CLEARActionPerformed(evt);
            }
        });

        ftEmail.setBackground(new java.awt.Color(204, 255, 255));
        ftEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ftEmailActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Calisto MT", 1, 14)); // NOI18N
        jLabel7.setText("Email:");

        ftAddress.setBackground(new java.awt.Color(204, 255, 255));

        jLabel9.setFont(new java.awt.Font("Calisto MT", 1, 14)); // NOI18N
        jLabel9.setText("Address");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Update, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Delete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Create, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 788, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(154, 154, 154)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(139, 139, 139)
                .addComponent(jLabel2)
                .addGap(151, 151, 151))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(325, 325, 325)
                        .addComponent(jLabel8))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ftPhone)
                            .addComponent(ftVID, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE))
                        .addGap(90, 90, 90)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ftNoV, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                            .addComponent(ftEmail))
                        .addGap(86, 86, 86)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ftPoV, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                            .addComponent(ftAddress)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(405, 405, 405)
                        .addComponent(CLEAR))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(226, 226, 226)
                        .addComponent(ftCi, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(99, 99, 99)
                        .addComponent(ftCo, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(285, 285, 285)
                        .addComponent(jLabel5)
                        .addGap(205, 205, 205)
                        .addComponent(jLabel6)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(174, 174, 174)
                .addComponent(jLabel4)
                .addGap(215, 215, 215)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(197, 197, 197))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {CLEAR, Create, Delete, Search, Update});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ftNoV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ftPoV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ftVID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(jLabel9)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ftPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ftEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ftAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ftCi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ftCo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(CLEAR)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(Create, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(Search)
                        .addGap(56, 56, 56)
                        .addComponent(Update, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(Delete)
                        .addGap(88, 88, 88))))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {CLEAR, Create, Delete, Search, Update});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ftPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ftPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ftPhoneActionPerformed

    private void CreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateActionPerformed
        Connection conn = DBConnection.getConnection();
        if(conn !=null);
        
        try {
    String sqlID = "SELECT MAX(visitors_id) AS max_id FROM visit";
    PreparedStatement pstmtID = conn.prepareStatement(sqlID);
    ResultSet rsID = pstmtID.executeQuery();
    int visitors_id = 1;
    if (rsID.next()) {
        visitors_id = rsID.getInt("max_id") + 1; 
    }
    pstmtID.close();

    String name_of_visitors = ftNoV.getText();
    String purpose_of_visit = ftPoV.getText();
    String phone = ftPhone.getText();
    String Email = ftEmail.getText();
    String Address = ftAddress.getText();
    String check_in = ftCi.getText();
    String check_out = ftCo.getText();

    if (name_of_visitors.isEmpty() || purpose_of_visit.isEmpty() || phone.isEmpty() || 
        Email.isEmpty() || Address.isEmpty() || check_in.isEmpty() || check_out.isEmpty()) {
        
        JOptionPane.showMessageDialog(this, "Please enter all text fields", "Try Again!", JOptionPane.ERROR_MESSAGE);
        return;
    } else {
        
        DefaultTableModel model = (DefaultTableModel) TableVisitors.getModel();
        model.addRow(new Object[]{visitors_id, name_of_visitors, purpose_of_visit, phone, Email, Address, check_in, check_out});

        String sql = "INSERT INTO visit(visitors_id, name_of_visitors, purpose_of_visit, phone, Email, Address, check_in, check_out) VALUES(?, ?, ?, ?, ?, ?, ?, ?)";
        
        PreparedStatement pstmt = conn.prepareStatement(sql);
        pstmt.setInt(1, visitors_id); 
        pstmt.setString(2, name_of_visitors);
        pstmt.setString(3, purpose_of_visit);
        pstmt.setString(4, phone);
        pstmt.setString(5, Email);
        pstmt.setString(6, Address);
        pstmt.setString(7, check_in);
        pstmt.setString(8, check_out);
        pstmt.executeUpdate(); 

        JOptionPane.showMessageDialog(this, "A new visitor was added successfully!");
        ftNoV.setText("");
        ftPoV.setText("");
        ftPhone.setText("");
        ftEmail.setText("");
        ftAddress.setText("");
        ftCi.setText("");
        ftCo.setText("");
        pstmt.close();
    }
} catch (SQLException e) {
    System.out.println("SQL Error: " + e.getMessage());
} finally {
    DBConnection.closeConnection(conn);
}
        
    }//GEN-LAST:event_CreateActionPerformed

    private void ftNoVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ftNoVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ftNoVActionPerformed

    private void ftPoVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ftPoVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ftPoVActionPerformed

    private void ftVIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ftVIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ftVIDActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        // TODO add your handling code here:
        Connection conn = DBConnection.getConnection();
        if(conn !=null);
                                    //textfields
        String visitors_id =     ftVID.getText();
        String name_of_visitors=        ftNoV.getText();
        String purpose_of_visit=        ftPoV.getText();
        String phone =        ftPhone.getText();
        String Email=    ftEmail.getText();
        String Address=    ftAddress.getText();
        String check_in =     ftCi.getText();
        String check_out=    ftCo.getText();
            
        //check table if empty
        if(visitors_id.isEmpty() || name_of_visitors.isEmpty() || purpose_of_visit.isEmpty() || phone.isEmpty() || Email.isEmpty() || Address.isEmpty()|| check_in.isEmpty() || check_out.isEmpty()){
            JOptionPane.showMessageDialog(this,
                "Please enter all fields",
                "Try Again!",
                JOptionPane.ERROR_MESSAGE);
            return;
        }else {
int confirm = JOptionPane.showConfirmDialog(this,
            "Do you want to update this visit?",
            "Confirm Update",
            JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {

}
            DefaultTableModel model = (DefaultTableModel) TableVisitors.getModel();
            model.setRowCount(0);
            model.addRow(new Object[]{visitors_id,name_of_visitors, purpose_of_visit, phone,Email,Address,check_in, check_out});

           
            
            try{

                String sql = "UPDATE visit SET  name_of_visitors= ?, purpose_of_visit = ?, phone = ?, Email = ?, Address = ?,check_in = ?, check_out = ?  WHERE visitors_id = ?";

                PreparedStatement pstmt = conn.prepareStatement(sql);

                
                pstmt.setString(1,ftNoV.getText());
                pstmt.setString(2,ftPoV.getText());
                pstmt.setString(3,ftPhone.getText());
                pstmt.setString(4,ftEmail.getText());
                pstmt.setString(5,ftAddress.getText());
                pstmt.setString(6,ftCi.getText());
                pstmt.setString(7,ftCo.getText());
                pstmt.setInt(8,Integer.parseInt(ftVID.getText()));

                int rowsUpdated = pstmt.executeUpdate();
                if(rowsUpdated > 0) {
                    JOptionPane.showMessageDialog(this,"A new Visitor was Updated successfully!");
                    System.out.println("A Visitor was updated successfully!\n");
                   
                    
             ftVID.setText("");
            ftNoV.setText("");
            ftPhone.setText("");
            ftEmail.setText("");
            ftAddress.setText("");
            ftPoV.setText("");
            ftCi.setText("");
            ftCo.setText("");
                }else{
                    System.out.println("No record found with the specified ID\n");

                }
                pstmt.close();
            }catch (SQLException | NumberFormatException e){
                System.out.println("SQL Error: " + e.getMessage()) ;
            }finally{
                DBConnection.closeConnection(conn);
            }

        }
    }//GEN-LAST:event_UpdateActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
        Connection conn = DBConnection.getConnection();
        if (conn != null) {
       try {
        // Get the selected rows
        int[] selectedRows = TableVisitors.getSelectedRows();

        if (selectedRows.length > 0) {
            int confirm = JOptionPane.showConfirmDialog(this,
                    "Are you sure you want to delete the selected visitor?",
                    "Confirm Deletion",
                    JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                StringBuilder sql = new StringBuilder("DELETE FROM visit WHERE Visitors_ID IN (");
                for (int i = 0; i < selectedRows.length; i++) {
                    int Visitors_ID = Integer.parseInt(TableVisitors.getValueAt(selectedRows[i], 0).toString());
                    sql.append(Visitors_ID).append(",");
                }
                sql.deleteCharAt(sql.length() - 1); // Remove the trailing comma
                sql.append(")");

                PreparedStatement pstmt = conn.prepareStatement(sql.toString());
                int rowsDeleted = pstmt.executeUpdate();

                if (rowsDeleted > 0) {
                    System.out.println("Selected visit deleted successfully!");
                    DefaultTableModel model = (DefaultTableModel) TableVisitors.getModel();
                    for (int i = selectedRows.length - 1; i >= 0; i--) {
                        model.removeRow(selectedRows[i]);
                    }
                    JOptionPane.showMessageDialog(this, "Selected visit deleted successfully!");
                } else {
                    System.out.println("No records found with the specified IDs");
                }
                pstmt.close();
            }
        } else {
            JOptionPane.showMessageDialog(this,
                    "Please select one or more rows to delete.",
                    "No rows selected",
                    JOptionPane.WARNING_MESSAGE);
        }
    } catch (SQLException e) {
        System.out.println("SQL Error: " + e.getMessage());
    } finally {
        DBConnection.closeConnection(conn);
    }
        }
    }//GEN-LAST:event_DeleteActionPerformed

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        // TODO add your handling code here:
         Connection conn =DBConnection.getConnection();
        if(conn !=null);
            try{
                String sql;
                PreparedStatement pstmt;
               
                if(ftVID.getText().trim().isEmpty()){
                    sql = "SELECT * FROM visit";
                    pstmt = conn.prepareStatement(sql);
                   
                }else{
                   
                    sql = "SELECT * FROM visit WHERE visitors_id = ?";
                    pstmt = conn.prepareStatement(sql);
                    pstmt.setInt(1,Integer.parseInt(ftVID.getText()));
                }
               
                ResultSet rs = pstmt.executeQuery();
               
                DefaultTableModel model = (DefaultTableModel)TableVisitors.getModel();
                model.setRowCount(0);
               
                while(rs.next()){
                   
                    int visitors_id = rs.getInt("visitors_id");
                    String name_of_visitors = rs.getString("name_of_visitors");
                    String purpose_of_visit = rs.getString("purpose_of_visit");
                    String phone= rs.getString("phone");
                    String Email = rs.getString("Email");
                    String Address = rs.getString("Address");
                    String check_in = rs.getString("check_in");
                    String check_out = rs.getString("check_out");
                   
                    model.addRow(new Object[]{visitors_id, name_of_visitors, purpose_of_visit, phone, Email, Address,check_in, check_out});
                   
                }
                rs.close();
                pstmt.close();
               
            }catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "SQL Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                    System.out.println("SQL Error: " + e.getMessage());
            }finally {
                DBConnection.closeConnection(conn);
            }

    }//GEN-LAST:event_SearchActionPerformed

    private void CLEARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CLEARActionPerformed
        // TODO add your handling code here:
          ftVID.setText("");
            ftNoV.setText("");
           ftPhone.setText("");
           ftEmail.setText("");
            ftAddress.setText("");
            ftPoV.setText("");
            ftCi.setText("");
            ftCo.setText("");
    }//GEN-LAST:event_CLEARActionPerformed

    private void ftEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ftEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ftEmailActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CLEAR;
    private javax.swing.JButton Create;
    private javax.swing.JButton Delete;
    private javax.swing.JButton Search;
    private javax.swing.JTable TableVisitors;
    private javax.swing.JButton Update;
    private javax.swing.JTextField ftAddress;
    private javax.swing.JTextField ftCi;
    private javax.swing.JTextField ftCo;
    private javax.swing.JTextField ftEmail;
    private javax.swing.JTextField ftNoV;
    private javax.swing.JTextField ftPhone;
    private javax.swing.JTextField ftPoV;
    private javax.swing.JTextField ftVID;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
